#!/bin/bash

readonly PROJECT_NAME=${1}
readonly OCP_TEMPLATE=${2}
readonly MONGODB_MEMORY_LIMIT=${3}
readonly PV_SIZE=${4}
readonly MONGODB_VERSION=${5}
readonly YCSB_WORKLOAD=${6}
readonly YCSB_DISTRIBUTION=${7}
readonly YCSB_RECORDCOUNT=${8}
readonly YCSB_OPERATIONCOUNT=${9}
readonly YCSB_THREADS=${10}
readonly LOG_DIR=${11}
readonly MONGODB_USER=redhat
readonly MONGODB_PASSWORD=redhat
readonly MONGODB_DATABASE=redhatdb
readonly MONGODB_ADMIN_PASSWORD=redhat


function create_project()
{
 oc adm new-project ${PROJECT_NAME}
}

function create_mongo_pod()
{
  oc new-app -n ${PROJECT_NAME} --name=mongodb36 --template=${OCP_TEMPLATE} \
    -p MONGODB_USER=${MONGODB_USER} \
    -p MONGODB_PASSWORD=${MONGODB_PASSWORD} \
    -p MONGODB_DATABASE=${MONGODB_DATABASE} \
    -p MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD} \
    -p MEMORY_LIMIT=${MONGODB_MEMORY_LIMIT} \
    -p VOLUME_CAPACITY=${PV_SIZE} \
    -p MONGODB_VERSION=${MONGODB_VERSION}
}

function create_ycsb_pod()
{
 cat <<EOF | oc create -f -
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: ycsb
  name: ycsb-pod
  namespace: ${PROJECT_NAME}
spec:
  containers:
    - image: docker.io/vaelinalsorna/centos7_yscb_mongo-shell:0.1
      imagePullPolicy: IfNotPresent
      name: ycsb-pod
      resources:
          limits:
            memory: 512Mi
      securityContext:
        capabilities: {}
        privileged: false
      terminationMessagePath: /dev/termination-log
  dnsPolicy: Default
  restartPolicy: OnFailure
  nodeSelector:
  serviceAccount: ""
status: {}
EOF
}

function load_database()
{
 local mongodb_ip
 mongodb_ip=$(oc get svc -n ${PROJECT_NAME} | grep -v glusterfs | grep mongodb | awk '{print $3}')
 local pod_name
 pod_name=$(oc get pods -n ${PROJECT_NAME} | grep mongodb | awk '{print $1}')
 oc -n ${PROJECT_NAME} exec $(oc get pod -n ${PROJECT_NAME} | grep ycsb | awk '{print $1}') -- \
 ./bin/ycsb load mongodb -s -threads ${YCSB_THREADS} \
 -P "workloads/${YCSB_WORKLOAD}" \
 -p mongodb.url=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${mongodb_ip}:27017/${MONGODB_DATABASE} \
 -p recordcount=${YCSB_RECORDCOUNT} \
 -p operationcount=${YCSB_OPERATIONCOUNT} \
 -p requestdistribution=${YCSB_DISTRIBUTION} \
 -p mongodb.writeConcern=acknowledged \
 -p wtimeout=10000 \
 -p core_workload_insertion_retry_limit=5 \
 -p core_workload_insertion_retry_interval=5 \
 -p maxexecutiontime=28800 2>&1 | tee -a ${LOG_DIR}/mongodb_${pod_name}_load_${PROJECT_NAME}_${YCSB_WORKLOAD}_threads_${YCSB_THREADS}_opscnt_${YCSB_OPERATIONCOUNT}.log
}

function wait_until_pods_are_ready()
{
  local interval="$1"
  while true;
  do
    ready_pods=$(oc get pod -n ${PROJECT_NAME} | grep -v deploy | grep Running | grep 1/1 | wc -l)
    if [[ "${ready_pods}" == "2" ]]; then
      echo "pods are ready"
      break
    fi
    echo "Pods are not ready yet... waiting"
    sleep ${interval}
  done
}

if [ $# -eq 0 ]; then
 echo "Come on, gimme a few variables..."
 exit 1
fi

create_project ${PROJECT_NAME}
create_mongo_pod ${PROJECT_NAME}
create_ycsb_pod ${PROJECT_NAME}
wait_until_pods_are_ready 2
load_database ${PROJECT_NAME}
